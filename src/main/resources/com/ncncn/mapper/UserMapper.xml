<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncncn.mapper.UserMapper">

    <select id="readUserByEmail" resultType="com.ncncn.domain.UserVO">
        select *
        from user
        where email = #{email}
    </select>

    <insert id="insertUser">
        insert into user(email, pwd, name, tel_no, eml_auth_tkn, in_user, up_user)
            value (#{email}, #{pwd}, #{name}, #{telNo}, #{emlAuthTkn}, current_user , current_user)
    </insert>

    <delete id="deleteByEmail">
        delete
        from user
        where email = #{email}
    </delete>

    <!-- LOGIN -->
    <select id="readForLogin" resultType="com.ncncn.domain.UserVO">
        select email,
               pwd,
               userT.enabled,
               roleT.code_name as roleCode
        from (
                 select email, pwd, enabled, role_code
                 from user
                 where email = #{email}
             ) userT,
             (
                 select *
                 from cmmn_code
                 where code_type = "USER_ROLE"
             ) roleT
        where userT.role_code = roleT.code
        ;
    </select>

    <select id="readById" resultType="com.ncncn.domain.UserVO">
        select *
        from user
        where id = #{userId};
    </select>

    <!-- 3일 전부터 새로 가입한 사용자를 카운트한다. -->
    <select id="countRecentlyInsert" resultType="int">
        select count(*)
        from user
        where in_date between date_sub(curdate(), interval 3 day) and date_add(curdate(), interval 1 day)
    </select>

    <sql id="criteria">
        <trim prefix="" suffix="" prefixOverrides="OR">
            <foreach item='type' collection="typeArr">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'N'.toString()">
                            name like CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'E'.toString()">
                            email like CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'T'.toString()">
                            tel_no like CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <select id="getListWithPaging" resultType="com.ncncn.domain.UserVO">
        <![CDATA[
            select id, email, name, in_date, tel_no, enabled
            from user
            where enabled=1 AND (
        ]]>

        <include refid="criteria"></include>

        )
        <![CDATA[
            order by id desc
            LIMIT #{amount}
            OFFSET ${(pageNum-1) * amount}

        ]]>
    </select>

    <select id="getListWithPagingQuit" resultType="com.ncncn.domain.UserVO">
        <![CDATA[
            select id, email, name, in_date, tel_no, enabled
            from user
            where enabled=0 AND (
        ]]>

        <include refid="criteria"></include>

        )
        <![CDATA[
            order by id desc
            LIMIT #{amount}
            OFFSET ${(pageNum-1) * amount}

        ]]>
    </select>

    <select id="getTotalCount" resultType="int">
        select count(*) from user
        where enabled=1 AND (

        <include refid="criteria"></include>

        )
    </select>

    <select id="getTotalCountQuit" resultType="int">
        select count(*) from user
        where enabled=0 AND (

        <include refid="criteria"></include>

        )
    </select>

    <select id="getUserDetail" resultType="com.ncncn.domain.UserDetailCheckVO">
    <![CDATA[
        select u.id,
               u.email,
               u.name,
               u.tel_no,
               u.in_date,
               bname.code_name as bankName,
               b.acc           as bankAccount,
               phist.balance,
               detail.deal_count,
               detail.paysum,
               pqust.pqust_count,
               u.enabled,
               u.memo
        from user u
                 left outer join
             bank_account b on u.id = b.user_id

                 left outer join
             (select user_id, count(*) as deal_count, sum(pymt_prc) as paysum
              from deal_detail
              group by user_id
             ) AS detail on u.id = detail.user_id

                 left outer join
             (select code, code_name
              from cmmn_code
              where code_type = 'BANK_NAME'
             ) AS bname on b.bnk_code = bname.code

                 left outer join
             (select *
              from pnt_hist
              where id IN
                    (select max(id)
                     from pnt_hist
                     group by user_id
                    )
             ) AS phist on u.id = phist.user_id

                 left outer join
             (select user_id, count(*) as pqust_count
              from cs_psnl_qust
              group by user_id
             ) AS pqust on u.id = pqust.user_id

        where u.id = #{userId}
        ]]>
    </select>

    <update id="updateMemo">
        update user
        set memo=#{memo},
            up_date=current_time,
            up_user=current_user
        where id = #{id}
    </update>

    <update id="updateStatus">
        update user
        set enabled=#{enabled},
            up_date=current_time,
            up_user=current_user
        where id = #{id}
    </update>

    <select id="getMyInfo" resultType="com.ncncn.domain.UserInfoDTO">
        <![CDATA[
        select user.id,
               user.email,
               user.pwd,
               user.name,
               user.role_code,
               user.tel_no,
               user.pnt,
               bnkT.acc,
               bnkT.bnk_code,
               bnkT.holder,
               bnkT.is_authed,
               stusT.code_name bnkName
        from (
                 bank_account bnkT
                     left join
                         (select * from cmmn_code where code_type = 'BANK_NAME' and enabled = 1) stusT
                     on bnkT.bnk_code = stusT.code
                 )
                 right join
                 (select * from user where user.id = #{userId} and enabled = '1') user
        on user.id = bnkT.user_Id
        ]]>
     </select>

    <update id="updatePwd">
        update user
        set pwd = #{pwd}
        where email = #{email}
          and id = #{userId}
    </update>

</mapper>