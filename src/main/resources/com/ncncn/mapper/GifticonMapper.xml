<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncncn.mapper.GifticonMapper">

    <select id="read" resultType="com.ncncn.domain.GifticonVO">
        select *
        from gifticon
        where id = #{id}
    </select>

    <select id="getGifticon" resultType="com.ncncn.domain.ProdListVO">
        select id, user_id, prod_code, dc_prc, prod.name as pname, brd.name as bname, prod.img_path
        from gifticon as gft
                 join product as prod on prod.code = gft.prod_code
                 join brand as brd on brd.code = prod.brd_code
        where id = #{id}
    </select>

    <sql id="getRqust">
        <![CDATA[
        from gifticon as gft
                    join product as prod on prod.code = gft.prod_code
                    join brand as brd on brd.code = prod.brd_code
                    join category as cate on cate.code = brd.cate_code
                    join user as usr on usr.id = gft.user_id
                    where gft.gft_stus_code = '001'
        ]]>
    </sql>

    <sql id="criteria">
        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'E'.toString()">
                            usr.email like concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'N'.toString()">
                            prod.name like concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            prod.code like concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <sql id="search">
        <trim prefix="and">
            <if test='keyword != null and keyword neq ""'>
                (prod.name like concat('%', #{keyword}, '%') OR brand.name like concat('%', #{keyword}, '%'))
            </if>
        </trim>
    </sql>

    <!-- 상태코드가 001(판매요청)인 기프티콘 목록을 조회 -->
    <select id="readAllRqustWithPaging" resultMap="SaleRqusts">
        <![CDATA[select gft.id as gft_id, gft.brcd as brcd, gft.expir_dt as expir_dt, gft.in_date as in_date, gft.img_path as img_path, gft.prod_code as prod_code,
                    cate.name as cate_name, brd.name as brd_name, prod.name as prod_name, usr.email as requester]]>
        <include refid="getRqust"/>
        <include refid="criteria"/>
        <![CDATA[
         order by gft.id
         limit #{amount}
         offset ${(pageNum - 1) * amount}
         ]]>
    </select>

    <!-- id 값에 해당하는 판매요청 조회 -->
    <select id="readRqustById" resultType="HashMap">
        <![CDATA[select gft.id gftId, gft.prod_code prodCode, gft.dc_prc dcPrc, gft.dc_rate dcRate, DATE_FORMAT(gft.expir_dt, '%Y-%m-%d') expirDt,
            gft.brcd brcd, gft.descn descn, gft.img_path imgPath, gft.is_auto_prc isAutoPrc, DATE_FORMAT(gft.in_date, '%Y-%m-%d') inDate,
            cate.name cateName, brd.name brdName, prod.name prodName, prod.prc prodPrc, prod.in_dc_rate inDcRate, usr.email requester]]>
        <include refid="getRqust"/>
        <![CDATA[ and gft.id = #{id} ]]>
    </select>

    <select id="countAllRqust" resultType="int">
        <![CDATA[select count(*)]]>
        <include refid="getRqust"/>
        <include refid="criteria"/>
    </select>

    <!-- 판매요청 승인시 상품코드와 가격, 할인율, 상태코드, 승인날짜 업데이트 -->
    <update id="updateSaleRqust">
        update gifticon
        set prod_code     = #{prodCode},
            dc_prc        = #{dcPrc},
            dc_rate       = #{dcRate},
            gft_stus_code = '002',
            aprv_dt       = now(),
            up_user       = current_user(),
            up_date       = now()
        where id = #{gftId}
    </update>

    <resultMap id="SaleRqusts" type="com.ncncn.domain.SaleRqustVO">
        <result property="gftId" column="gft_id"/>
        <result property="brcd" column="brcd"/>
        <result property="expirDt" column="expir_dt"/>
        <result property="inDate" column="in_date"/>
        <result property="imgPath" column="img_path"/>
        <result property="prodCode" column="prod_code"/>
        <result property="cateName" column="cate_name"/>
        <result property="brdName" column="brd_name"/>
        <result property="prodName" column="prod_name"/>
        <result property="requester" column="requester"/>
    </resultMap>

    <update id="gftDealCmpl">
        update gifticon
        set gft_stus_code = '005',
            up_user       = current_user,
            up_date       = now()
        where id = #{gftId}
    </update>

    <delete id="deleteGifticon">
        <![CDATA[
        delete
        from gifticon
        where id = #{gftId}
        ]]>
   </delete>

    <update id="updateGftPrc">
        update gifticon
        set is_auto_prc = #{isAutoPrc},
            dc_prc      = #{dcPrc},
            dc_rate     = #{dcRate},
            up_date     = current_date()
        where id = #{gftId}
    </update>

    <select id="countNotYetApproved" resultType="int">
        select count(*)
        from gifticon g
                 join cmmn_code c on g.gft_stus_code = c.code
        where gft_stus_code = '001'
          and c.code_type = 'GFT_STUS'
    </select>

    <select id="countOnselling" resultType="int">
        select count(*)
        from gifticon gftT,
             (select * from cmmn_code where code_type = 'GFT_STUS' and code_name = '판매중' and enabled = '1') stusT
        where prod_code = #{prdCode}
          and gftT.gft_stus_code = stusT.code
    </select>

    <!-- 판매중 기프티콘 목록 -->
    <select id="getGiftiList" resultType="com.ncncn.domain.ProdListVO">
        <![CDATA[
        select gifti.id,
               prod.enabled,
               gifti.user_id,
               gifti.prod_code,
               brand.name    as bname,
               prod.name     as pname,
               prod.prc,
               gifti.dc_prc,
               gifti.expir_dt,
               gifti.dc_rate,
               gft_stus_code,
               prod.img_path as pimg_path
        from gifticon as gifti
                 INNER JOIN product as prod ON gifti.prod_code = prod.code
                 INNER JOIN brand ON prod.brd_code = brand.code
        where prod_code like concat(#{code}, '%')
          and prod.enabled = '1'
          and gft_stus_code = '002'
        order by dc_prc, expir_dt
        ]]>
    </select>

    <!-- 판매중 기프티콘 대표   -->
    <select id="getGifti" resultType="com.ncncn.domain.ProdListVO">
        <![CDATA[
        select gifti.id,
               prod.enabled,
               gifti.user_id,
               gifti.prod_code,
               brand.code        as brdCode,
               brand.name        as bname,
               prod.name         as pname,
               prod.prc,
               min(gifti.dc_prc) as dc_prc,
               max(dc_rate)      as dc_rate,
               gft_stus_code,
               prod.descn,
               prod.img_path     as pimg_path
        from gifticon as gifti
                 INNER JOIN product as prod ON gifti.prod_code = prod.code
                 INNER JOIN brand ON prod.brd_code = brand.code
        where prod_code like concat(#{code}, '%')
          and prod.enabled = '1'
          and gft_stus_code = '002'
        group by gifti.prod_code
        ]]>
    </select>

    <!-- 판매중 기프티콘 목록 조회(페이징 처리)   -->
    <select id="getGiftiWithPaging" resultType="com.ncncn.domain.ProdListVO">
        <![CDATA[
        select gifti.id, prod.enabled, expir_dt, gifti.user_id, gifti.prod_code, brand.name as bname, prod.name as pname, prod.prc, prod.sold_quty, min(dc_prc)as dc_prc, max(dc_rate) as dc_rate, gft_stus_code,prod.img_path  as pimg_path
        from gifticon as gifti
        INNER JOIN product as prod ON gifti.prod_code = prod.code
        INNER JOIN brand ON prod.brd_code = brand.code
        where prod_code like concat(#{code}, '%') and prod.enabled = '1'
        ]]>
        <include refid="search"></include>
        <![CDATA[
        and gft_stus_code ='002'
        group by gifti.prod_code
        order by
        ]]>
        <choose>
            <when test="orderby=='best'">prod.sold_quty desc</when>
            <when test="orderby=='low'">dc_prc</when>
            <when test="orderby=='high'">dc_prc desc</when>
        </choose>
        <![CDATA[
            , gifti.prod_code
            LIMIT #{amount}
            OFFSET ${(pageNum-1) * amount}
        ]]>
    </select>

    <select id="getTotalCount" resultType="int">
        <![CDATA[
        select count(tbl.id) from(
        select gifti.id, prod.enabled, expir_dt, gifti.user_id, gifti.prod_code, brand.name as bname, prod.name as pname, prod.prc, prod.sold_quty, min(dc_prc)as dc_prc, max(dc_rate) as dc_rate, gft_stus_code,prod.img_path  as pimg_path
        from gifticon as gifti
        INNER JOIN product as prod ON gifti.prod_code = prod.code
        INNER JOIN brand ON prod.brd_code = brand.code
        where prod_code like concat(#{code}, '%') and prod.enabled = '1'
        ]]>
        <include refid="search"></include>
        <![CDATA[
        and gft_stus_code ='002'
        group by gifti.prod_code
        ) as tbl
        ]]>
    </select>

    <!-- 인기상품 8개 조회 -->
    <select id="getBestGifti" resultType="com.ncncn.domain.ProdListVO">
        select id,
               prod.enabled,
               user_id,
               prod_code,
               brand.name    as bname,
               prod.name     as pname,
               prc,
               sold_quty,
               min(dc_prc)   as dc_prc,
               max(dc_rate)  as dc_rate,
               gft_stus_code,
               prod.img_path as pimg_path
        from gifticon as gifti
                 INNER JOIN product as prod ON gifti.prod_code = prod.code
                 INNER JOIN brand ON prod.brd_code = brand.code
        where prod.enabled = '1'
          and gft_stus_code = '002'
        group by gifti.prod_code
        order by prod.sold_quty desc limit 8
    </select>

    <!-- 7일 이내의 마감임박 상품조회  -->
    <select id="getDeadlineGifti" resultType="com.ncncn.domain.ProdListVO">
        <![CDATA[
        select tbl.*
        from (select to_days(expir_dt) - to_days(current_date()) as d_day,
                     prod.enabled,
                     id,
                     user_id,
                     prod_code,
                     brand.name                as bname,
                     prod.name                 as pname,
                     prc,
                     expir_dt,
                     sold_quty,
                     dc_prc,
                     dc_rate,
                     gft_stus_code,
                     prod.img_path             as pimg_path
              from gifticon as gifti
                       INNER JOIN product as prod ON gifti.prod_code = prod.code
                       INNER JOIN brand ON prod.brd_code = brand.code
              where date(expir_dt) >= current_date
                and to_days(expir_dt) - to_days(current_date()) <= 7
                and prod.enabled = '1'
                and gft_stus_code = '002'
              order by expir_dt,sold_quty desc, pname LIMIT 18446744073709551615
             ) as tbl
        group by tbl.prod_code
        limit #{amount}
        offset ${(pageNum - 1) * amount}
        ]]>
    </select>
    <select id="getDeadTotal" resultType="int">
        <![CDATA[
        select count(*)
        from gifticon as gifti
                 INNER JOIN product as prod ON gifti.prod_code = prod.code
                 INNER JOIN brand ON prod.brd_code = brand.code
        where date(expir_dt) >= current_date
        and to_days(expir_dt) - to_days(current_date()) <= 7
        and prod.enabled = '1'
        and gft_stus_code = '002';
        ]]>
    </select>

    <insert id="registerGifticon">
        insert into gifticon
        values (default, #{userId}, #{prodCode}, #{dcPrc}, #{dcRate}, #{expirDt}, #{brcd}, #{descn},
                #{imgPath}, #{isAutoPrc}, '001', default, current_user(), default, current_user(), null)
    </insert>

    <!-- 가격변동사항 저장 -->
    <insert id="insertDcPrcHist">
        insert into dc_prc_hist
        values
        (default, #{id}, #{dcPrc}, now(), null, default, current_user(), default, current_user())
    </insert>

    <select id="getGftIdByBarcode" resultType="_int">
        select id from gifticon
        where brcd=#{brcd}
    </select>

    <!-- dc_prc_hist table의 end_dt 업데이트할 row의 id 가져오기 -->
    <select id="getDcPrcHistIdByGftId" resultType="_int">
        select id from dc_prc_hist
        where gft_id=#{gftId}
        order by id desc
            limit 1
    </select>

    <update id="updateDcPrcHist">
        update dc_prc_hist
        set end_dt = now()
        where id=#{id}
    </update>

    <select id="getMainGftByBrandName" resultType="com.ncncn.domain.ProdListVO">
        select prdT.img_path     pimgPath,
               brdT.name         bname,
               prdT.name         pname,
               max(gftT.dc_rate) dcRate,
               prdT.prc          prc,
               min(gftT.dc_prc)  dcPrc,
               gftT.prod_code    prodCode
        from gifticon as gftT,
             product as prdT,
             (select * from brand where name = #{brdName}) as brdT,
             (select code from cmmn_code where code_type = 'GFT_STUS' and code_name = '판매중') as stusT
        where brdT.code = prdT.brd_code
          and prdT.code = gftT.prod_code
          and gftT.gft_stus_code = stusT.code
        group by gftT.prod_code;
    </select>

    <!-- 기프티콘 상태 변경(판매중 -> 거래확정대기) -->
    <update id="updateGftStus">
        update gifticon
        set gft_stus_code = '004',
            up_date       = now(),
            up_user       = current_user()
        where id = #{id}
    </update>

    <sql id="getSaleGft">
        <![CDATA[
        from gifticon as gft
                    join product as prod on prod.code = gft.prod_code
                    join brand as brd on brd.code = prod.brd_code
                    join category as cate on cate.code = brd.cate_code
                    join user as usr on usr.id = gft.user_id
                where
        ]]>
    </sql>

    <sql id="saleGftCriteria">
        <trim prefix="(" suffix=") AND " prefixOverrides="OR">
            <foreach collection="orderArr" item="order">
                <trim prefix="OR">
                    <choose>
                        <when test="order == 'S'.toString()">
                            gft.gft_stus_code = '002'
                        </when>
                        <when test="order == 'J'.toString()">
                            gft.gft_stus_code = '003'
                        </when>
                        <when test="order == 'W'.toString()">
                            gft.gft_stus_code = '004'
                        </when>
                        <when test="order == 'C'.toString()">
                            gft.gft_stus_code = '005'
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
        <trim prefix="(" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'E'.toString()">
                            usr.email like concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'N'.toString()">
                            prod.name like concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            prod.code like concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'G'.toString()">
                            gft.id = #{keyword}
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <select id="getAllSaleGifticon" resultType="HashMap">
        <![CDATA[select gft.id as gftId, gft.prod_code as prodCode, cate.name as cateName, brd.name as brdName, prod.name as prodName, usr.email as requester,
	        gft.brcd as brcd, DATE_FORMAT(gft.expir_dt, '%Y-%m-%d') as expirDt, (select code_name from cmmn_code where code_type = 'GFT_STUS' and code = gft.gft_stus_code) gftStus,
	        gft.img_path as imgPath]]>
        <include refid="getSaleGft"/>
        <include refid="saleGftCriteria"/>
        <![CDATA[
         order by prod.code, gft_stus_code, gft.expir_dt
         limit #{amount}
         offset ${(pageNum - 1) * amount}
         ]]>
    </select>

    <!-- id 값에 해당하는 판매요청 조회 -->
    <select id="getSaleGifticon" resultType="HashMap">
        <![CDATA[select gft.id gftId, gft.dc_prc dcPrc, gft.dc_rate dcRate, DATE_FORMAT(gft.expir_dt, '%Y-%m-%d') expirDt,
            gft.brcd brcd, gft.descn descn, gft.img_path imgPath, gft.is_auto_prc isAutoPrc, prod.prc prodPrc,
            (select code_name from cmmn_code where code_type = 'GFT_STUS' and code = gft.gft_stus_code) gftStus, gft.gft_stus_code stusCode,
            cate.name cateName, brd.name brdName, prod.name prodName, usr.email requester]]>
        <include refid="getSaleGft"/>
        <![CDATA[ gft.gft_stus_code != '001' and gft.id = #{gftId} ]]>
    </select>

    <select id="countAllSaleGft" resultType="int">
        <![CDATA[select count(*)]]>
        <include refid="getSaleGft"/>
        <include refid="saleGftCriteria"/>
    </select>

    <update id="updateSaleGftStus">
        update gifticon
        set gft_stus_code = #{stus},
            up_user       = current_user,
            up_date       = now()
        where id = #{id}
    </update>

    <select id="getAutoPricedGifticon" resultType="com.ncncn.domain.AutoPriceVO">
        select g.id,
               g.prod_code,
               p.prc,
               g.dc_prc,
               p.in_dc_rate,
               g.dc_rate,
               g.expir_dt,
               g.gft_stus_code stus_code
        from gifticon g
                 left outer join product p on g.prod_code = p.code
        where g.is_auto_prc = 1
          and (g.gft_stus_code = '001' or g.gft_stus_code = '002')
          and DATEDIFF(g.expir_dt, now()) IN (59, 44, 29, 14)
    </select>

    <select id="getOnSaleGifticon" resultType="com.ncncn.domain.GifticonVO">
        select *
        from gifticon
        where gft_stus_code = '001'
           or gft_stus_code = '002'
    </select>

    <update id="disableExpiredGifticon">
        update gifticon
        set gft_stus_code = '003',
            up_date       = now(),
            up_user       = current_user()
        where id = #{id}
    </update>

    <update id="updateAutoPrice">
        update gifticon
        set dc_prc  = #{dcPrc},
            dc_rate = #{dcRate},
            up_date = now(),
            up_user = 'AutoPriceTask'
        where id = #{id}
    </update>

    <!-- 어제 업로드된 바코드 이미지 파일 목록 가져오기 -->
    <select id="getYesterdayBarcodeImageInfo" resultType="com.ncncn.domain.BarcodeInfoVO">
        select substr(img_path, 24, 10) upload_path,
               substr(img_path, 35, 36) uuid,
               substr(img_path, 72)     file_name
        from gifticon
        where substr(img_path, 24, 10) = DATE_FORMAT(DATE_ADD(now(), INTERVAL -1 DAY), '%Y/%m/%d')
    </select>

    <select id="getNotCmplGft" resultType="com.ncncn.domain.DealDetailVO">
        select gftT.id gifticonId, dealT.pymt_prc pymtPrc, dealT.id id
        from deal_detail dealT,
             gifticon gftT
        where dealT.gifticon_id = gftT.id
          and gftT.gft_stus_code = '004'
          and date_format(adddate(dealT.deal_dt, interval 4 day), '%y%m%d') = date_format(now(), '%y%m%d')
          and dealT.cmpl_dt is null;
    </select>

    <update id="autoDealCmpl" parameterType="java.util.List">
        <foreach collection="list" index="index" item="gifticon" separator=";" close=";">
        update gifticon as gftT, deal_detail as dealT, user as userT
        set gftT.gft_stus_code = '005',
            dealT.cmpl_dt = now(),
            userT.pnt = userT.pnt + #{gifticon.pymtPrc}
        where dealT.gifticon_id = gftT.id
            and gftT.user_id = userT.id
            and gftT.id = #{gifticon.gifticonId}
        </foreach>
    </update>

    <select id="checkGft" resultType="int">
        select count(*)
        from gifticon
        where id = #{gftId} and user_id = #{userId};
    </select>

    <select id="checkValidPrc" resultType="com.ncncn.domain.GifticonVO">
        select *
        from gifticon
        where id = #{gftId};
    </select>

</mapper>
